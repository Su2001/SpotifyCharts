openapi: 3.0.0
info:
  title: Music Streaming API
  description: >-
    REST API for managing music-related functionalities. This service uses a
    complete dataset of all the "Top 200" and             "Viral 50" charts
    published for each country by Spotify. Spotify publishes a new chart every
    2-3 days. This is its              entire collection since 1 January 2017 to
    31 December 2021.
  version: 1.0.0
servers:
  - url: TO BE DECIDED
paths:
  /premium/playlist/{song_id}:
    post:
      summary: Add Favorite Songs to Playlist
      description: >-
        Authenticated users can enhance their playlist by adding songs they've
        liked.
      requestBody:
          description: "User inf"
          required: True
          content:
            application/json:
              schema:
                x-body-name: "user"
                type: "object"
                properties:
                  user_id:
                    type: "integer"
      parameters:
        - in: path
          name: song_id
          required: true
          description: ID of the song to be added to the playlist
          schema:
            type: string
      responses:
        '200':
          description: Successfully added song to playlist
        '401':
          description: Unauthorized - user not authenticated
    delete:
      summary: Remove Favorite Songs from Playlist
      description: >-
        Authenticated users can manage their playlist by removing songs they no longer wish to keep in their favorites. 
      requestBody:
          description: "User inf"
          required: True
          content:
            application/json:
              schema:
                x-body-name: "user"
                type: "object"
                properties:
                  user_id:
                    type: "integer"
      parameters:
        - in: path
          name: song_id
          required: true
          description: ID of the song to be removed to the playlist
          schema:
            type: string
      responses:
        '200':
          description: Successfully removed song to playlist
        '401':
          description: Unauthorized - user not authenticated
        '404':
          description: Song not found
  /premium/playlist:
    get:
      summary: Access Playlist
      description: Authenticated users can access their playlist.
      responses:
        '200':
          description: Successfully retrieved playlist
        '401':
          description: Unauthorized - user not authenticated
  /regular/search:
    get:
      summary: Search for Songs or Artists
      description: >-
        Unauthenticated users can search for specific songs or artists within
        the dataset.
      parameters:
        - in: query
          name: query
          required: true
          description: Search query for songs or artists
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved search results
        '404':
          description: Song or artist not found
  /regular/top-charts:
    get:
      summary: Explore Top Charts
      description: >-
        Unauthenticated users can browse the Top 200 and Viral 50 charts for
        different regions and dates.
      parameters:
        - in: query
          name: region
          required: true
          description: Region for which the top charts are to be explored
          schema:
            type: string
        - in: query
          name: date_range
          required: true
          description: Date range for which the top charts are to be explored
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved top charts
        '404':
          description: top charts not found
  /regular/song-details/{song_id}:
    get:
      summary: Song Details
      description: >-
        Unauthenticated users can see the information of a song, including their
        streams and positions on the charts.
      parameters:
        - in: path
          name: song_id
          required: true
          description: ID of the song for which details are to be retrieved
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved song details
        '404':
          description: Song not found
  /premium/song-details/{song_id}/comment:
    post:
      summary: Add Comments to Songs
      description: >-
        Authenticated users can enrich their music listening experience by adding
        comments to individual songs.
      parameters:
        - in: path
          name: song_id
          required: true
          description: ID of the song for to be comment
          schema:
            type: string
      responses:
        '200':
          description: Successfully added a comment to a song
        '404':
          description: Song not found
  /premium/song-details/{song_id}/comment/{comment_id}:
    delete:
        summary: Delete Comment
        description: >-
          Authenticated users have the ability to manage their comments by deleting
          them when necessary.
        parameters:
          - in: path
            name: song_id
            required: true
            description: ID of the song
            schema:
              type: string
          - in: path
            name: comment_id
            required: true
            description: ID of the comment for to be deleted
            schema:
              type: string
        responses:
          '200':
            description: Successfully deleted a comment to a song
          '404':
            description: Song not found
    put:
      summary: Update Comment
      description: >-
         Authenticated users can update their comments within a designated time frame
         (e.g., 30 minutes) after posting. 
      parameters:
          - in: path
            name: song_id
            required: true
            description: ID of the song
            schema:
              type: string
          - in: path
            name: comment_id
            required: true
            description: ID of the comment for to be upated
            schema:
              type: string
      responses:
        '200':
          description: Successfully updated a comment to a song
        '404':
          description: Song not found
          

components:
  schemas:
    Comment:
      type: object
      properties:
        comment_id:
          type: string
          description: The unique identifier for the comment
        content:
          type: string
          description: Content of the comment
        user_id:
          type: string
          description: user_id that make the comment
        timestamp:
          type: string
          format: date-time
          description: date of the creation of the comment
      required:
        - comment_id
        - content
        - user_id
        - timestamp
    Song:
      type: object
      properties:
        song_id:
          type: string
          description: The unique identifier for the song
        title:
          type: string
          description: The title of the song
        rank:
          type: integer
          description: The rank of the song in the chart
        date:
          type: string
          format: date
          description: The date when the song charted
        artist:
          type: string
          description: The name of the artist or artists performing the song
        url:
          type: string
          description: The link to the song the in spotify
        region:
          type: string
          description: The country where the song charted
        chart:
          type: string
          description: In which chart the song is in - top200 or top50
        trend:
          type: string
          description: >-
            The positions that the song climbed or downed comparing to the last
            chart
        streams:
          type: integer
          description: The number of streams that the song had between charts
        comments:
          type: array
          items:
            $ref: '#/components/schemas/Comment'
          description: List of comments
      required:
        - id
        - title
        - artist
